services:
  ##############################################################################
  # PODS
  ##############################################################################
  ${OD_CSS0_SERVICE_NAME}:
    profiles: [ "pod", "backend" ]
    image: gddmulde/community-solid-server:latest
    ports:
      - "${OD_CSS0_HOST_PORT}:${OD_CSS0_CONTAINER_PORT}"
    environment:
      - CSS_BASE_URL=${OD_CSS0_BASE_URL}
      - CSS_PORT=${OD_CSS0_CONTAINER_PORT}
      - CSS_CONFIG=/config/server.json
      - CSS_ROOT_FILE_PATH=/pods
      - CSS_SEEDED_POD_CONFIG_JSON=/config/pods.json
      - CSS_HTTPS_KEY=/my-cert/actor-private.key
      - CSS_HTTPS_CERT=/my-cert/actor.crt
      - NODE_EXTRA_CA_CERTS=/shared-certs/ca.crt
    volumes:
      - type: bind
        source: ./actors/admin/pod
        target: /pods/admin
      - type: bind
        source: ./actors/admin/config/css-users.json
        target: /config/pods.json
      - type: bind
        source: ./common/css-01.json
        target: /config/server.json
      - type: bind
        source: ./common/templatepod
        target: /config/templatepod
      # these lines make the current computer's users and groups available in the container
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      # Certificates (todo: refactor cert resources from ./scripts to more appropriate location)
      - ./scripts/cert/outputs/css0:/my-cert:ro
      - ./scripts/cert/outputs/certificate-authority:/shared-certs:ro
    healthcheck:
      test: "[ -e healthy.flag ] || if wget --no-check-certificate ${OD_CSS0_BASE_URL} --spider; then touch healthy.flag; else false; fi"
      interval: 5s
      timeout: 10s
      retries: 65
      start_period: 30s

  ${OD_CSS1_SERVICE_NAME}:
    profiles: [ "pod", "backend" ]
    image: gddmulde/community-solid-server:latest
    ports:
      - "${OD_CSS1_HOST_PORT}:${OD_CSS1_CONTAINER_PORT}"
    environment:
      - CSS_BASE_URL=${OD_CSS1_BASE_URL}
      - CSS_PORT=${OD_CSS1_CONTAINER_PORT}
      - CSS_CONFIG=/config/server.json
      - CSS_ROOT_FILE_PATH=/pods
      - CSS_SEEDED_POD_CONFIG_JSON=/config/pods.json
      - CSS_HTTPS_KEY=/my-cert/actor-private.key
      - CSS_HTTPS_CERT=/my-cert/actor.crt
      - NODE_EXTRA_CA_CERTS=/shared-certs/ca.crt
    volumes:
      - type: bind
        source: ./actors/lindner-group/pod
        target: /pods/lindner-group
      - type: bind
        source: ./actors/lindner-group/config/css-users.json
        target: /config/pods.json
      - type: bind
        source: ./common/css-01.json
        target: /config/server.json
      - type: bind
        source: ./common/templatepod
        target: /config/templatepod
      # these lines make the current computer's users and groups available in the container
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      # Certificates (todo: refactor cert resources from ./scripts to more appropriate location)
      - ./scripts/cert/outputs/css1:/my-cert:ro
      - ./scripts/cert/outputs/certificate-authority:/shared-certs:ro
    healthcheck:
      test: "[ -e healthy.flag ] || if wget --no-check-certificate ${OD_CSS1_BASE_URL} --spider; then touch healthy.flag; else false; fi"
      interval: 5s
      timeout: 10s
      retries: 65
      start_period: 30s

  ${OD_CSS2_SERVICE_NAME}:
    profiles: [ "pod", "backend" ]
    image: gddmulde/community-solid-server:latest
    ports:
      - "${OD_CSS2_HOST_PORT}:${OD_CSS2_CONTAINER_PORT}"
    environment:
      - CSS_BASE_URL=${OD_CSS2_BASE_URL}
      - CSS_PORT=${OD_CSS2_CONTAINER_PORT}
      - CSS_CONFIG=/config/server.json
      - CSS_ROOT_FILE_PATH=/pods
      - CSS_SEEDED_POD_CONFIG_JSON=/config/pods.json
      - CSS_HTTPS_KEY=/my-cert/actor-private.key
      - CSS_HTTPS_CERT=/my-cert/actor.crt
      - NODE_EXTRA_CA_CERTS=/shared-certs/ca.crt
    volumes:
      - type: bind
        source: ./actors/building-owner/pod
        target: /pods/building-owner
      - type: bind
        source: ./actors/building-owner/config/css-users.json
        target: /config/pods.json
      - type: bind
        source: ./common/css-01.json
        target: /config/server.json
      - type: bind
        source: ./common/templatepod
        target: /config/templatepod
      # these lines make the current computer's users and groups available in the container
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      # Certificates (todo: refactor cert resources from ./scripts to more appropriate location)
      - ./scripts/cert/outputs/css2:/my-cert:ro
      - ./scripts/cert/outputs/certificate-authority:/shared-certs:ro
    healthcheck:
      test: "[ -e healthy.flag ] || if wget --no-check-certificate ${OD_CSS2_BASE_URL} --spider; then touch healthy.flag; else false; fi"
      interval: 5s
      timeout: 10s
      retries: 65
      start_period: 30s

  ${OD_CSS3_SERVICE_NAME}:
    profiles: [ "pod", "backend" ]
    image: gddmulde/community-solid-server:latest
    ports:
      - "${OD_CSS3_HOST_PORT}:${OD_CSS3_CONTAINER_PORT}"
    environment:
      - CSS_BASE_URL=${OD_CSS3_BASE_URL}
      - CSS_PORT=${OD_CSS3_CONTAINER_PORT}
      - CSS_CONFIG=/config/server.json
      - CSS_ROOT_FILE_PATH=/pods
      - CSS_SEEDED_POD_CONFIG_JSON=/config/pods.json
      - CSS_HTTPS_KEY=/my-cert/actor-private.key
      - CSS_HTTPS_CERT=/my-cert/actor.crt
      - NODE_EXTRA_CA_CERTS=/shared-certs/ca.crt
    volumes:
      - type: bind
        source: ./actors/building-owner2/pod
        target: /pods/building-owner2
      - type: bind
        source: ./actors/building-owner2/config/css-users.json
        target: /config/pods.json
      - type: bind
        source: ./common/css-01.json
        target: /config/server.json
      - type: bind
        source: ./common/templatepod
        target: /config/templatepod
      # these lines make the current computer's users and groups available in the container
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      # Certificates (todo: refactor cert resources from ./scripts to more appropriate location)
      - ./scripts/cert/outputs/css3:/my-cert:ro
      - ./scripts/cert/outputs/certificate-authority:/shared-certs:ro
    healthcheck:
      test: "[ -e healthy.flag ] || if wget --no-check-certificate ${OD_CSS3_BASE_URL} --spider; then touch healthy.flag; else false; fi"
      interval: 5s
      timeout: 10s
      retries: 65
      start_period: 30s

  ${OD_CSS4_SERVICE_NAME}:
    profiles: [ "pod", "backend" ]
    image: gddmulde/community-solid-server:latest
    ports:
      - "${OD_CSS4_HOST_PORT}:${OD_CSS4_CONTAINER_PORT}"
    environment:
      - CSS_BASE_URL=${OD_CSS4_BASE_URL}
      - CSS_PORT=${OD_CSS4_CONTAINER_PORT}
      - CSS_CONFIG=/config/server.json
      - CSS_ROOT_FILE_PATH=/pods
      - CSS_SEEDED_POD_CONFIG_JSON=/config/pods.json
      - CSS_HTTPS_KEY=/my-cert/actor-private.key
      - CSS_HTTPS_CERT=/my-cert/actor.crt
      - NODE_EXTRA_CA_CERTS=/shared-certs/ca.crt
    volumes:
      - type: bind
        source: ./actors/ragn-sells/pod
        target: /pods/ragn-sells
      - type: bind
        source: ./actors/ragn-sells/config/css-users.json
        target: /config/pods.json
      - type: bind
        source: ./common/css-01.json
        target: /config/server.json
      - type: bind
        source: ./common/templatepod
        target: /config/templatepod
      # these lines make the current computer's users and groups available in the container
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      # Certificates (todo: refactor cert resources from ./scripts to more appropriate location)
      - ./scripts/cert/outputs/css4:/my-cert:ro
      - ./scripts/cert/outputs/certificate-authority:/shared-certs:ro
    healthcheck:
      test: "[ -e healthy.flag ] || if wget --no-check-certificate ${OD_CSS4_BASE_URL} --spider; then touch healthy.flag; else false; fi"
      interval: 5s
      timeout: 10s
      retries: 65
      start_period: 30s

  ${OD_CSS5_SERVICE_NAME}:
    profiles: [ "pod", "backend" ]
    image: gddmulde/community-solid-server:latest
    ports:
      - "${OD_CSS5_HOST_PORT}:${OD_CSS5_CONTAINER_PORT}"
    environment:
      - CSS_BASE_URL=${OD_CSS5_BASE_URL}
      - CSS_PORT=${OD_CSS5_CONTAINER_PORT}
      - CSS_CONFIG=/config/server.json
      - CSS_ROOT_FILE_PATH=/pods
      - CSS_SEEDED_POD_CONFIG_JSON=/config/pods.json
      - CSS_HTTPS_KEY=/my-cert/actor-private.key
      - CSS_HTTPS_CERT=/my-cert/actor.crt
      - NODE_EXTRA_CA_CERTS=/shared-certs/ca.crt
    volumes:
      - type: bind
        source: ./actors/texon/pod
        target: /pods/texon
      - type: bind
        source: ./actors/texon/config/css-users.json
        target: /config/pods.json
      - type: bind
        source: ./common/css-01.json
        target: /config/server.json
      - type: bind
        source: ./common/templatepod
        target: /config/templatepod
      # these lines make the current computer's users and groups available in the container
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      # Certificates (todo: refactor cert resources from ./scripts to more appropriate location)
      - ./scripts/cert/outputs/css5:/my-cert:ro
      - ./scripts/cert/outputs/certificate-authority:/shared-certs:ro
    healthcheck:
      test: "[ -e healthy.flag ] || if wget --no-check-certificate ${OD_CSS5_BASE_URL} --spider; then touch healthy.flag; else false; fi"
      interval: 5s
      timeout: 10s
      retries: 65
      start_period: 30s

  ${OD_CSS6_SERVICE_NAME}:
    profiles: [ "pod", "backend" ]
    image: gddmulde/community-solid-server:latest
    ports:
      - "${OD_CSS6_HOST_PORT}:${OD_CSS6_CONTAINER_PORT}"
    environment:
      - CSS_BASE_URL=${OD_CSS6_BASE_URL}
      - CSS_PORT=${OD_CSS6_CONTAINER_PORT}
      - CSS_CONFIG=/config/server.json
      - CSS_ROOT_FILE_PATH=/pods
      - CSS_SEEDED_POD_CONFIG_JSON=/config/pods.json
      - CSS_HTTPS_KEY=/my-cert/actor-private.key
      - CSS_HTTPS_CERT=/my-cert/actor.crt
      - NODE_EXTRA_CA_CERTS=/shared-certs/ca.crt
    volumes:
      - type: bind
        source: ./actors/manufacturer/pod
        target: /pods/manufacturer
      - type: bind
        source: ./actors/manufacturer/config/css-users.json
        target: /config/pods.json
      - type: bind
        source: ./common/css-01.json
        target: /config/server.json
      - type: bind
        source: ./common/templatepod
        target: /config/templatepod
      # these lines make the current computer's users and groups available in the container
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      # Certificates (todo: refactor cert resources from ./scripts to more appropriate location)
      - ./scripts/cert/outputs/css6:/my-cert:ro
      - ./scripts/cert/outputs/certificate-authority:/shared-certs:ro
    healthcheck:
      test: "[ -e healthy.flag ] || if wget --no-check-certificate ${OD_CSS6_BASE_URL} --spider; then touch healthy.flag; else false; fi"
      interval: 5s
      timeout: 10s
      retries: 65
      start_period: 30s

  ${OD_CSS7_SERVICE_NAME}:
    profiles: [ "pod", "backend" ]
    image: gddmulde/community-solid-server:latest
    ports:
      - "${OD_CSS7_HOST_PORT}:${OD_CSS7_CONTAINER_PORT}"
    environment:
      - CSS_BASE_URL=${OD_CSS7_BASE_URL}
      - CSS_PORT=${OD_CSS7_CONTAINER_PORT}
      - CSS_CONFIG=/config/server.json
      - CSS_ROOT_FILE_PATH=/pods
      - CSS_SEEDED_POD_CONFIG_JSON=/config/pods.json
      - CSS_HTTPS_KEY=/my-cert/actor-private.key
      - CSS_HTTPS_CERT=/my-cert/actor.crt
      - NODE_EXTRA_CA_CERTS=/shared-certs/ca.crt
    volumes:
      - type: bind
        source: ./actors/brand/pod
        target: /pods/brand
      - type: bind
        source: ./actors/brand/config/css-users.json
        target: /config/pods.json
      - type: bind
        source: ./common/css-01.json
        target: /config/server.json
      - type: bind
        source: ./common/templatepod
        target: /config/templatepod
      # these lines make the current computer's users and groups available in the container
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      # Certificates (todo: refactor cert resources from ./scripts to more appropriate location)
      - ./scripts/cert/outputs/css7:/my-cert:ro
      - ./scripts/cert/outputs/certificate-authority:/shared-certs:ro
    healthcheck:
      test: "[ -e healthy.flag ] || if wget --no-check-certificate ${OD_CSS7_BASE_URL} --spider; then touch healthy.flag; else false; fi"
      interval: 5s
      timeout: 10s
      retries: 65
      start_period: 30s

  ##############################################################################
  # FRONTEND
  ##############################################################################
  ${OD_WEBCLIENT_SERVICE_NAME}:
    profiles: [ "frontend" ]
    # not image comunica/jquery-widget.js:latest because of https://github.com/comunica/jQuery-Widget.js/issues/152
    image: ${OD_WEBCLIENT_IMAGE}
    ports:
      - "${OD_WEBCLIENT_HOST_PORT}:${OD_WEBCLIENT_CONTAINER_PORT}"
    volumes:
      - ./actors/webclient/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./scripts/comunica/outputs/queries.json:/usr/share/nginx/html/queries.json
      - ./scripts/cert/outputs/webclient:/etc/ssl/cert:ro

  ${OD_VIEWER_SERVICE_NAME}:
    profiles: [ "frontend" ]
    image: nginx:1.25.2-alpine
    ports:
      - "${OD_VIEWER_HOST_PORT}:${OD_VIEWER_CONTAINER_PORT}"
    volumes:
      - ./actors/viewer/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./actors/viewer/html:/usr/share/nginx/html
      - ./scripts/cert/outputs/viewer:/etc/ssl/cert:ro

  browser:
    profiles: [ "frontend" ]
    image: jlesage/firefox:latest
    shm_size: '2g'
    ports:
      - "${OD_BROWSER_HOST_PORT}:${OD_BROWSER_CONTAINER_PORT}"
    environment:
      - DISPLAY_WIDTH=1024
      - DISPLAY_HEIGHT=768
      - FF_OPEN_URL=${OD_VIEWER_BASE_URL}:${OD_VIEWER_CONTAINER_PORT}
    volumes:
      - ./scripts/cert/outputs/certificate-authority:/shared-certs:ro
      - ./volumes/browser-data:/config:rw
      - ./scripts/cert/outputs/certificate-authority:/config/Desktop:rw

  ##############################################################################
  # BASHLIB
  ##############################################################################
  bashlib:
    profiles: [ "backend", "bashlib" ]
    build: ./bashlib-build
    environment:
      - OD_SELF_SIGNED_CERTIFICATES=${OD_SELF_SIGNED_CERTIFICATES}
      - NODE_EXTRA_CA_CERTS=/shared-certs/ca.crt
    volumes:
      - ./scripts/cert/outputs/certificate-authority:/shared-certs:ro
      - ./scripts/ac:/scripts:rw
    depends_on:
      ${OD_CSS0_SERVICE_NAME}:
        condition: service_healthy
      ${OD_CSS1_SERVICE_NAME}:
        condition: service_healthy
      ${OD_CSS2_SERVICE_NAME}:
        condition: service_healthy
      ${OD_CSS3_SERVICE_NAME}:
        condition: service_healthy
      ${OD_CSS4_SERVICE_NAME}:
        condition: service_healthy
      ${OD_CSS5_SERVICE_NAME}:
        condition: service_healthy
      ${OD_CSS6_SERVICE_NAME}:
        condition: service_healthy
      ${OD_CSS7_SERVICE_NAME}:
        condition: service_healthy
    stdin_open: true
    tty: true
    # the script in command must end with 'touch /healthy.flag' and then 'sleep infinity` for the health check to work!
    # you may visit bashlib interactively with `docker compose [--profile ...] exec -it bashlib bash'; very useful for script debugging
    command: ["./set_perms.sh"]
    healthcheck:
      test: "[ -e /healthy.flag ]"
      interval: 5s
      timeout: 10s
      retries: 65
      start_period: 30s

  ##############################################################################
  # TESTING
  ##############################################################################
  ${OD_CSS_TEST_SERVICE_NAME}:
    profiles: [ "test" ]
    image: gddmulde/community-solid-server:latest
    ports:
      - "${OD_CSS_TEST_HOST_PORT}:${OD_CSS_TEST_CONTAINER_PORT}"
    environment:
      - CSS_BASE_URL=${OD_CSS_TEST_BASE_URL}
      - CSS_PORT=${OD_CSS_TEST_CONTAINER_PORT}
      - CSS_CONFIG=/config/server.json
      - CSS_ROOT_FILE_PATH=/pods
      - CSS_SEEDED_POD_CONFIG_JSON=/config/pods.json
      - CSS_HTTPS_KEY=/my-cert/actor-private.key
      - CSS_HTTPS_CERT=/my-cert/actor.crt
      - NODE_EXTRA_CA_CERTS=/shared-certs/ca.crt
    volumes:
      - type: bind
        source: ./actors/test/pod
        target: /pods/test
      - type: bind
        source: ./actors/test/config/css-users.json
        target: /config/pods.json
      - type: bind
        source: ./common/css-01.json
        target: /config/server.json
      - type: bind
        source: ./common/templatepod
        target: /config/templatepod
      # these lines make the current computer's users and groups available in the container
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      # Certificates (todo: refactor cert resources from ./scripts to more appropriate location)
      - ./scripts/cert/outputs/css-test:/my-cert:ro
      - ./scripts/cert/outputs/certificate-authority:/shared-certs:ro
    healthcheck:
      test: "[ -e healthy.flag ] || if wget --no-check-certificate ${OD_CSS_TEST_BASE_URL} --spider; then touch healthy.flag; else false; fi"
      interval: 5s
      timeout: 10s
      retries: 65
      start_period: 30s
