#!/bin/bash
# ref: https://www.baeldung.com/openssl-self-signed-cert
set -e
set -u
shopt -s nullglob
DIR_OUTPUT=${OD_DOLLAR}(pwd)/outputs

# Reset output dir
if [ -d ${OD_DOLLAR}DIR_OUTPUT ];
then
  rm -rf ${OD_DOLLAR}DIR_OUTPUT
fi;
mkdir -p ${OD_DOLLAR}DIR_OUTPUT

# 0. CREATE ROOT CA
FPATH_CA_PRIVATE_KEY=${OD_DOLLAR}DIR_OUTPUT/"ca-private.key"
FPATH_CA_CERT=${OD_DOLLAR}DIR_OUTPUT/"ca.crt" # X.509 certificate that's ASCII PEM-encoded
FPATH_CA_PASSWORD=${OD_DOLLAR}DIR_OUTPUT/"ca.pass"
CA_PASSWORD="Azerty123"
echo ${OD_DOLLAR}CA_PASSWORD > ${OD_DOLLAR}FPATH_CA_PASSWORD
CA_SUBJ="/C=BE/ST=Oost-Vlaanderen/L=Gent/O=imec/OU=KNoWS/CN=ca"
./create-root-CA.sh \
  ${OD_DOLLAR}FPATH_CA_PRIVATE_KEY \
  ${OD_DOLLAR}FPATH_CA_CERT \
  ${OD_DOLLAR}FPATH_CA_PASSWORD \
  ${OD_DOLLAR}CA_SUBJ

# dictionary: container (also directory name) to domain
declare -A CONTAINERS
CONTAINERS[css0]=${OD_CSS0_DOMAIN}
CONTAINERS[css1]=${OD_CSS1_DOMAIN}
CONTAINERS[css2]=${OD_CSS2_DOMAIN}
CONTAINERS[css3]=${OD_CSS3_DOMAIN}
CONTAINERS[css4]=${OD_CSS4_DOMAIN}
CONTAINERS[css5]=${OD_CSS5_DOMAIN}
CONTAINERS[css6]=${OD_CSS6_DOMAIN}
CONTAINERS[css7]=${OD_CSS7_DOMAIN}
CONTAINERS[webclient]=${OD_WEBCLIENT_DOMAIN}
CONTAINERS[viewer]=${OD_VIEWER_DOMAIN}
CONTAINERS[css-test]=${OD_CSS_TEST_DOMAIN}

for CONTAINER in ${OD_DOLLAR}{!CONTAINERS[@]}; do

  # 1. CREATE PRIVATE KEY
  FPATH_PRIVATE_KEY=${OD_DOLLAR}DIR_OUTPUT/"${OD_DOLLAR}CONTAINER-private.key"
  FPATH_EXT=${OD_DOLLAR}DIR_OUTPUT/"${OD_DOLLAR}CONTAINER.ext"
  ./create-private-key.sh ${OD_DOLLAR}FPATH_PRIVATE_KEY
  # 1b. CREATE CERTIFICATE EXTENSION FILE FOR CONTAINER
  ./create-certificate-extensions-file.sh ${OD_DOLLAR}{CONTAINERS[${OD_DOLLAR}CONTAINER]} ${OD_DOLLAR}FPATH_EXT
  # 1c. EXTRACT PUBLIC KEY
  FPATH_PUBLIC_KEY=${OD_DOLLAR}{FPATH_PRIVATE_KEY/private/public}
  ./extract-public-key.sh ${OD_DOLLAR}FPATH_PRIVATE_KEY ${OD_DOLLAR}FPATH_PUBLIC_KEY

  # 2. CREATE CSR
  FPATH_CSR=${OD_DOLLAR}DIR_OUTPUT/"${OD_DOLLAR}CONTAINER.csr"
  SUBJ="/C=BE/ST=Oost-Vlaanderen/L=Gent/O=imec/OU=KNoWS/CN=${OD_DOLLAR}{CONTAINERS[${OD_DOLLAR}CONTAINER]}"
  ./create-certificate-signing-request.sh \
    ${OD_DOLLAR}FPATH_PRIVATE_KEY \
    ${OD_DOLLAR}FPATH_CSR \
    ${OD_DOLLAR}SUBJ

  # 3. CREATE SELF-SIGNED CERTIFICATE
  FPATH_CERT=${OD_DOLLAR}DIR_OUTPUT/"${OD_DOLLAR}CONTAINER.crt"
  ./create-self-signed-certificate.sh \
    ${OD_DOLLAR}FPATH_PRIVATE_KEY \
    ${OD_DOLLAR}FPATH_CSR \
    ${OD_DOLLAR}FPATH_CERT

  # 4. CREATE CA-SIGNED CERTIFICATE
  ./create-CA-signed-certificate.sh \
    ${OD_DOLLAR}FPATH_CA_CERT \
    ${OD_DOLLAR}FPATH_CA_PRIVATE_KEY \
    ${OD_DOLLAR}FPATH_CSR \
    ${OD_DOLLAR}FPATH_CERT \
    ${OD_DOLLAR}FPATH_EXT \
    ${OD_DOLLAR}FPATH_CA_PASSWORD


  # 5. RESTRUCTURE INTO ACTOR SUBFOLDERS
  ## 5.a Move domain files to separate directory
  mkdir -p ${OD_DOLLAR}DIR_OUTPUT/${OD_DOLLAR}CONTAINER
  mv ${OD_DOLLAR}DIR_OUTPUT/${OD_DOLLAR}CONTAINER*.* ${OD_DOLLAR}DIR_OUTPUT/${OD_DOLLAR}CONTAINER
  ## 5.b Rename to general "actor*" files
  for x in ${OD_DOLLAR}(ls ${OD_DOLLAR}DIR_OUTPUT/${OD_DOLLAR}CONTAINER/);
  do
    src=${OD_DOLLAR}DIR_OUTPUT/${OD_DOLLAR}CONTAINER/${OD_DOLLAR}x
    dest=${OD_DOLLAR}DIR_OUTPUT/${OD_DOLLAR}CONTAINER/${OD_DOLLAR}{x/${OD_DOLLAR}CONTAINER/actor}
    mv ${OD_DOLLAR}src ${OD_DOLLAR}dest
  done;
done;

# 6. RESTRUCTURE CERTIFICATE AUTHORITY FILES
mkdir -p ${OD_DOLLAR}DIR_OUTPUT/certificate-authority
mv ${OD_DOLLAR}DIR_OUTPUT/ca* ${OD_DOLLAR}DIR_OUTPUT/certificate-authority

# 7. UPDATE PERMISSIONS
# Note: needed to fix permission denied errors in Docker containers
chmod 777 ${OD_DOLLAR}DIR_OUTPUT/*/*


